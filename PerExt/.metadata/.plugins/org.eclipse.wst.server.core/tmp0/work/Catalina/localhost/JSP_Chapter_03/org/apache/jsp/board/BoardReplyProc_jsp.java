/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.29
 * Generated at: 2018-10-01 04:21:21 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.oreilly.servlet.MultipartRequest;
import com.oreilly.servlet.multipart.DefaultFileRenamePolicy;
import java.util.*;
import java.io.*;
import java.sql.*;
import java.net.URLEncoder;

public final class BoardReplyProc_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.net.URLEncoder");
    _jspx_imports_classes.add("com.oreilly.servlet.multipart.DefaultFileRenamePolicy");
    _jspx_imports_classes.add("com.oreilly.servlet.MultipartRequest");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
request.setCharacterEncoding("euc-kr"); 
      out.write("\r\n");
      out.write("\r\n");

	int rno = Integer.parseInt(request.getParameter("rno"));
	
	Connection conn = null;
	PreparedStatement pstmt = null;
	ResultSet rs1 = null;
	ResultSet rs2 = null;
	
	String encoded_key="";
	
	String column = request.getParameter("column");
	if(column == null)	column="";
	
	String key = request.getParameter("key");
	if(key!=null){
		encoded_key=URLEncoder.encode(key, "euc-kr");
	}else{
		key="";
	}
	
	String filename = null;
	int filesize=0;
	
	String saveFolder = "Upload_Files";
	
	ServletContext context = getServletContext();
	String realFolder = context.getRealPath(saveFolder);
	
	int sizeLimit = 10*1024*1024;
	String encType = "euc-kr";
	DefaultFileRenamePolicy policy = new DefaultFileRenamePolicy();
	
	
	try{
		String jdbcUrl = "jdbc:mysql://localhost:3306/jspdb";
		String jdbcId = "jspuser";
		String jdbcPw = "jsppass";
		
		Class.forName("com.mysql.jdbc.Driver");
		conn = DriverManager.getConnection(jdbcUrl, jdbcId, jdbcPw);
		
		String Query1 = "SELECT max(RcdNo) FROM board";
		pstmt = conn.prepareStatement(Query1);
		rs1 = pstmt.executeQuery();
		rs1.next();
		
		int new_rno = rs1.getInt(1)+1;
		
		String Query2 = "SELECT GrpNo, RcdLevel, RcdOrder FROM board WHERE RcdNo=?";
		pstmt = conn.prepareStatement(Query2);
		pstmt.setInt(1, rno);
		rs2 = pstmt.executeQuery();
		rs2.next();
		
		int gno = rs2.getInt(1);
		int level = rs2.getInt(2);
		int order = rs2.getInt(3);
		int new_level = level+1;
		int new_order = order+1;
		
		String Query3 = "UPDATE board SET RcdOrder=RcdOrder+1 WHERE GrpNo=? AND RcdOrder>?";
		pstmt = conn.prepareStatement(Query3);
		pstmt.setInt(1, gno);
		pstmt.setInt(2, order);
		pstmt.executeUpdate();
		
		MultipartRequest multi = new MultipartRequest(request, realFolder, sizeLimit, encType, policy);
		
		filename = multi.getFilesystemName("filename");
		
		if(filename !=null){
			Enumeration files = multi.getFileNames();
			String fname = (String)files.nextElement();
			File file = multi.getFile(fname);
			filesize = (int)file.length();
		}
		
		String name = multi.getParameter("name");
		String mail = multi.getParameter("mail");
		String subject = multi.getParameter("subject");
		String content = multi.getParameter("content");
		String pass = multi.getParameter("pass");
		//String filename = null;
		//int filesize=0;
		int refer = 0;
		long now = System.currentTimeMillis();
		
		String Query4 = "INSERT INTO board VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)";
		pstmt = conn.prepareStatement(Query4);
		pstmt.setInt(1, new_rno);
		pstmt.setInt(2, gno);
		pstmt.setString(3, name);
		pstmt.setString(4, mail);
		pstmt.setString(5, subject);
		pstmt.setString(6, content);
		pstmt.setString(7, pass);
		pstmt.setString(8, filename);
		pstmt.setInt(9, filesize);
		pstmt.setLong(10, now);
		pstmt.setInt(11, refer);
		pstmt.setInt(12, new_level);
		pstmt.setInt(13, new_order);
		
		pstmt.executeUpdate();
	}catch(SQLException e){
		out.print(e);
	}finally{
		rs2.close();
		rs1.close();
		pstmt.close();
		conn.close();
		String retUrl = "BoardList.jsp?column="+column+"&key="+encoded_key;
		response.sendRedirect(retUrl);
	}

      out.write('\r');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
